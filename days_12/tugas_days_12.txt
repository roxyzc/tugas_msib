CREATE DATABASE tugas_days_12;

CREATE TABLE mahasiswa (mahasiswa_id int, nim varchar(12), name varchar(255), alamat TEXT, PRIMARY KEY(mahasiswa_id));

CREATE TABLE matakuliah (matakuliah_id varchar(5), name varchar(255), sks int CHECK(sks > 0 AND sks < 5), PRIMARY KEY (matakuliah_id));

CREATE TABLE ambil_mk (ambil_mk_id int, mahasiswa_id int, matakuliah_id varchar(5), nilai int CHECK(nilai > -1 AND nilai < 101), PRIMARY KEY(ambil_mk_id), FOREIGN KEY (mahasiswa_id) REFERENCES mahasiswa(mahasiswa_id), FOREIGN KEY (matakuliah_id) REFERENCES matakuliah(matakuliah_id));

INSERT INTO mahasiswa (mahasiswa_id, nim, name, alamat) VALUES (1, '312110169', 'Ridho Pikriyansyah', 'Jl. Jambu'), (2, '312110168', 'roxyzc', 'Jl. Durian'), (3, '312110167', 'viyella', 'Jl. Pepaya');

INSERT INTO matakuliah (matakuliah_id, name, sks) VALUES ('A01', 'Pemrograman Web', 3), ('A02', 'Bahasa Inggris', 2), ('A03', 'Pemrograman Desktop', 3), ('A04', 'Pancasila', 1);

INSERT INTO ambil_mk (ambil_mk_id, mahasiswa_id, matakuliah_id, nilai) VALUES (1, 1, 'A01', 0), (2, 1, 'A02', 80), (3, 1, 'A03', 75), (4, 1, 'A04', 90), (5, 2, 'A02', 90), (6, 2, 'A03', 60), (7, 2, 'A04', 75), (8, 3, 'A02', 60), (9, 3, 'A03', 70);

Pertanyaan No 1.
SELECT m.name, am.nilai FROM mahasiswa AS m INNER JOIN ambil_mk AS am ON am.mahasiswa_id = m.mahasiswa_id WHERE am.matakuliah_id = 'A03' AND am.nilai = (SELECT MAX(am2.nilai) FROM ambil_mk AS am2 WHERE am2.matakuliah_id = 'A03');

Pertanyaan No 2. 
SELECT mahasiswa.name FROM mahasiswa WHERE mahasiswa.mahasiswa_id NOT IN (SELECT ambil_mk.mahasiswa_id FROM ambil_mk WHERE ambil_mk.matakuliah_id = 'A01');

Pertanyaan No 3.
SELECT DISTINCT am.nilai FROM ambil_mk AS am WHERE am.nilai = (SELECT MIN(am2.nilai) FROM ambil_mk AS am2 WHERE am2.mahasiswa_id = (SELECT m.mahasiswa_id FROM mahasiswa AS m WHERE m.name = 'viyella'));

Pertanyaan No 4
- Scalar Subquery = digunakan pada klausa SELECT, WHERE ataupun HAVING  untuk membandingkan data dari query utama dengan nilai tunggal yang dihasilkan oleh subquery.

Contohnya: 
SELECT m.name FROM mahasiswa AS m INNER JOIN ambil_mk am ON am.mahasiswa_id = m.mahasiswa_id GROUP BY m.mahasiswa_id HAVING AVG(am.nilai) > (SELECT AVG(nilai) FROM ambil_mk);

- Singlerow Subquery = subquery yang menghasilkan nilai tunggal, baik berupa angka, string, atau nilai lainnya, yang dapat digunakan untuk perbandingan dalam query utama. Biasanya digunakan dengan operator perbandingan seperti =, >, <.

Contohnya:
SELECT m.name, am.matakuliah_id FROM mahasiswa AS m INNER JOIN ambil_mk AS am ON am.mahasiswa_id = m.mahasiswa_id WHERE am.mahasiswa_id = '2' AND am.nilai = (SELECT MAX(am2.nilai) FROM ambil_mk AS am2 WHERE am2.mahasiswa_id = '2'); 

- Multiple row subquery = serupa seperti singlerow subquery hanya saja dia menghasilkan beberapa baris data, klausa yang digunakan hanya IN, NOT IN, ANY, SOME atau ALL

Contohnya:
SELECT m.name FROM mahasiswa AS m WHERE m.mahasiswa_id IN (SELECT am.mahasiswa_id FROM ambil_mk AS am WHERE am.nilai > 80);

- Correlated Subquery = memiliki data yang sama dengan query utama,  hasilnya digunakan untuk memfilter atau memodifikasi hasil dari query utama

Contohnya:
SELECT am.mahasiswa_id, am.nilai FROM ambil_mk AS am WHERE am.nilai > (SELECT AVG(am2.nilai) FROM ambil_mk AS am2 WHERE am2.mahasiswa_id = am.mahasiswa_id);

- Nested Subquery = subquery yang memiliki subquery didalamnya

Contohnya:
SELECT DISTINCT am.nilai FROM ambil_mk AS am WHERE am.nilai = (SELECT MIN(am2.nilai) FROM ambil_mk AS am2 WHERE am2.mahasiswa_id = (SELECT m.mahasiswa_id FROM mahasiswa AS m WHERE m.name = 'viyella'));